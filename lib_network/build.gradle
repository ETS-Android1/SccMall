plugins {
    id 'com.android.library'
}
def root = rootProject.ext
apply plugin: 'dagger.hilt.android.plugin'
android {
    compileSdkVersion root.android.compileSdkVersion
    defaultConfig {
        minSdkVersion root.android.minSdkVersion
        targetSdkVersion root.android.targetSdkVersion
        versionCode root.android.versionCode
        versionName root.android.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        resourcePrefix "network_"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api "io.reactivex.rxjava2:rxjava:2.2.6" // 必要rxjava2依赖
    api "io.reactivex.rxjava2:rxandroid:2.1.0" // 必要rxandrroid依赖，切线程时需要用到
    api 'com.squareup.retrofit2:retrofit:2.8.1' // 必要retrofit依赖
    api 'com.squareup.retrofit2:converter-gson:2.8.1' // 必要依赖，解析json字符所用
    api 'com.squareup.retrofit2:adapter-rxjava2:2.5.0' // 必要依赖，和Rxjava结合必须用到，下面会提到
    api 'com.squareup.okhttp3:logging-interceptor:4.9.0' //非必要依赖， log依赖，如果需要打印OkHttpLog需要添加
    implementation 'com.google.dagger:hilt-android:2.40.1'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.40.1'

    //    api root.libRetrofit2
//    api root.libRetrofit2ConverterGson
//    implementation root.libGson

    implementation project(":lib_utils")
}